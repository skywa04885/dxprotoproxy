components:
  schemas:
    Error:
      properties:
        error_code:
          description: The error in machine format
          type: string
        error_human:
          description: The error in human friendly format
          type: string
      type: object
    GetAction_definition:
      properties:
        action_type:
          type: string
        description:
          type: string
        descriptions:
          items:
            type: object
          type: array
        help:
          type: string
        mission_group_id:
          type: string
        name:
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetAction_definitions:
      properties:
        action_type:
          type: string
        description:
          type: string
        descriptions:
          items:
            type: object
          type: array
        help:
          type: string
        mission_group_id:
          type: string
        name:
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetArea_action_definition:
      properties:
        action_type:
          description: A name associated with this area action
          type: string
        action_type_id:
          description: The type of area action
          format: int64
          type: integer
        help:
          description: A description of this action
          type: string
        limit:
          description: The amount of actions of this type we can add.
          format: int64
          type: integer
        name:
          description: A nice name associated with this area action
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetArea_action_definitions:
      properties:
        action_type:
          description: A name associated with this area action
          type: string
        action_type_id:
          description: The type of area action
          format: int64
          type: integer
        help:
          description: A description of this action
          type: string
        limit:
          description: The amount of actions of this type we can add.
          format: int64
          type: integer
        name:
          description: A nice name associated with this area action
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetArea_event:
      properties:
        actions:
          type: string
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this area
          type: string
        map:
          description: The url to the map this area belongs to
          type: string
        map_id:
          description: The id of the map this area belongs to
          type: string
        name:
          description: A name associated with this area
          type: string
        polygon:
          description: The list of coordinates in the area polygon
          items:
            type: object
          type: array
        type_id:
          description: The type of area
          format: int64
          type: integer
      type: object
    GetArea_events:
      properties:
        guid:
          description: The global id unique across robots that identifies this area
          type: string
        map:
          description: The url to the map this area belongs to
          type: string
        name:
          description: A name associated with this area
          type: string
        type_id:
          description: The type of area
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetArea_events_definitions:
      properties:
        actions:
          type: string
        color:
          description: The color associated with this area
          type: string
        id:
          description: The type of area
          format: int64
          type: integer
        image:
          type: string
        legacyName:
          type: string
        name:
          description: A nice name associated with this area action
          type: string
      type: object
    GetBluetooth:
      properties:
        address:
          description: The mac address of the blueooth device
          type: string
        name:
          description: The name of the bluetooth device
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetBluetooth_relay:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global unique id across robots that identifies this bluetooth
            device
          type: string
        hardware_id:
          description: The hardware id string for this bluetooth device
          type: string
        name:
          description: The name of the bluetooth device
          type: string
        type:
          description: Parameter to filter bluetooth devices
          type: string
      type: object
    GetBluetooth_relays:
      properties:
        guid:
          description: The global unique id across robots that identifies this bluetooth
            device
          type: string
        name:
          description: The name of the bluetooth device
          type: string
        type:
          description: Parameter to filter bluetooth devices
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetBluetooth_status:
      properties: {}
      type: object
    GetCart:
      properties:
        cart_calibration:
          description: The url to the calibration of this cart
          type: string
        cart_calibration_id:
          description: The id of the calibration for this cart has
          type: string
        cart_type:
          description: The url to the type of this cart
          type: string
        cart_type_id:
          description: The id of the type of this cart
          type: string
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this cart
          type: string
        name:
          description: The name of the cart
          type: string
      type: object
    GetCart_calibration:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        drive_height:
          description: The height of the hook when driving with carts of this cart
            calibration
          format: int64
          type: integer
        entry_height:
          description: The entry height of the hook for the cart calibration
          format: int64
          type: integer
        guid:
          description: The global id unique across robots that identifies this cart
            calibration
          type: string
        lock_height:
          description: The lock height of the hook for the cart calibration
          format: int64
          type: integer
        name:
          description: The name of the cart calibration
          type: string
        qw:
          description: The qw quaternion of the cart calibration
          format: float
          type: number
        qx:
          description: The qx quaternion of the cart calibration
          format: float
          type: number
        qy:
          description: The qy quaternion of the cart calibration
          format: float
          type: number
        qz:
          description: The qz quaternion of the cart calibration
          format: float
          type: number
        standard:
          description: If the cart calibration is standard or not
          type: boolean
        x:
          description: The offset in the x-coordinate of the cart calibration
          format: float
          type: number
        y:
          description: The offset in the y-coordinate of the cart calibration
          format: float
          type: number
        z:
          description: The offset in the z-coordinate of the cart calibration
          format: float
          type: number
      type: object
    GetCart_calibrations:
      properties:
        guid:
          description: The global id unique across robots that identifies this cart
            calibration
          type: string
        name:
          description: The name of the cart calibration
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetCart_type:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this cart
            type
          type: string
        height:
          description: The height of carts of this type
          format: float
          type: number
        length:
          description: The length of carts of this type
          format: float
          type: number
        name:
          description: The name of the cart type
          type: string
        offset_locked_wheels:
          description: The offset from the center of the robot to the locked wheels
            of carts of this type
          format: float
          type: number
        width:
          description: The width of carts of this type
          format: float
          type: number
      type: object
    GetCart_types:
      properties:
        guid:
          description: The global id unique across robots that identifies this cart
            type
          type: string
        name:
          description: The name of the cart type
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetCarts:
      properties:
        cart_calibration:
          description: The url to the calibration of this cart
          type: string
        cart_type:
          description: The url to the type of this cart
          type: string
        guid:
          description: The global id unique across robots that identifies this cart
          type: string
        name:
          description: The name of the cart
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetChanges_me:
      properties: {}
      type: object
    GetDashboard:
      properties:
        created_by:
          description: The url to the user that created the dashboard
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        fleet_dashboard:
          type: boolean
        guid:
          description: The global id unique across robots that identifies this dashboard
          type: string
        name:
          description: The name of this dashboard
          type: string
        widgets:
          description: The url to the possible widgets. if the dashboard does not
            have any widgets then this field is empty
          type: string
      type: object
    GetDashboard_widget:
      properties:
        dashboard:
          description: The url to the dashboard where this widget belongs.
          type: string
        dashboard_id:
          description: The guid of the dashboard this widget belongs to
          type: string
        guid:
          description: The global id unique across robots that identifies this widget
          type: string
        settings:
          description: Widgets configuration encoded base 64 in json
          type: string
      type: object
    GetDashboard_widgets:
      properties:
        dashboard_id:
          description: The guid of the dashboard this widget belongs to
          type: string
        guid:
          description: The global id unique across robots that identifies this widget
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetDashboards:
      properties:
        guid:
          description: The global id unique across robots that identifies this dashboard
          type: string
        name:
          description: The name of this dashboard
          type: string
        url:
          description: The URL of the resource
          type: string
        widgets:
          description: The url to the possible widgets. if the dashboard does not
            have any widgets then this field is empty
          type: string
      type: object
    GetDistance_statistics:
      properties:
        date:
          format: date-time
          type: string
        distance:
          format: float
          type: number
      type: object
    GetDocking_offset:
      properties:
        guid:
          description: The global id unique across robots that identifies this docking
            offset
          type: string
        orientation_offset:
          description: The orientation offset with respect to the docking marker
          format: float
          type: number
        pos_id:
          description: The global id refering to the position that this offset belongs
            to
          type: string
        position:
          description: The url to the position
          type: string
        x_offset:
          description: The x-offset with respect to the docking marker
          format: float
          type: number
        y_offset:
          description: The y-offset with respect to the docking marker
          format: float
          type: number
      type: object
    GetDocking_offsets:
      properties:
        guid:
          description: The global id unique across robots that identifies this docking
            offset
          type: string
        position:
          description: The url to the position
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetError_report:
      properties:
        description:
          type: string
        download_url:
          description: The url to where the bag can be downloaded
          type: string
        id:
          description: Id of the autobag
          format: int64
          type: integer
        module:
          description: The module that created the autolog
          type: string
        ready:
          description: Status of the rosbag
          type: boolean
        time:
          description: The time where the autolog was created
          format: date-time
          type: string
      type: object
    GetError_report_download:
      properties: {}
      type: object
    GetError_reports:
      properties:
        description:
          type: string
        download_url:
          description: The url to where the bag can be downloaded
          type: string
        id:
          description: Id of the autobag
          format: int64
          type: integer
        module:
          description: The module that created the autolog
          type: string
        ready:
          description: Status of the rosbag
          type: boolean
        time:
          description: The time where the autolog was created
          format: date-time
          type: string
      type: object
    GetFactory_reset:
      properties: {}
      type: object
    GetGroup_action_definition:
      properties:
        action_type:
          type: string
        description:
          type: string
        descriptions:
          items:
            type: object
          type: array
        help:
          type: string
        mission_group_id:
          type: string
        name:
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetGroup_missions:
      properties:
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        name:
          description: The name of the mission
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetHelper_positions:
      properties:
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        map:
          description: The url to the map this position belongs to
          type: string
        name:
          description: The name of the position
          type: string
        type_id:
          description: The type of position. see the general description above
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetHook:
      properties:
        angle:
          description: The angle of the hook arm
          format: float
          type: number
        available:
          description: Whether the hook data is available or not
          type: boolean
        brake:
          $ref: '#/components/schemas/brake'
        gripper:
          $ref: '#/components/schemas/gripper'
        height:
          $ref: '#/components/schemas/height'
        qr_marker_name:
          description: The name of the last seen qr marker
          type: string
      type: object
    GetHook_brake:
      properties:
        braked:
          description: Whether the brake of the hook is active or not
          type: boolean
        state:
          description: The state of the hook brake in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook brake in human format
          type: string
      type: object
    GetHook_gripper:
      properties:
        closed:
          description: Whether the gripper of the hook is closed or not
          type: boolean
        state:
          description: The sate of the hook gripper in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook gripper in human format
          type: string
      type: object
    GetHook_height:
      properties:
        height:
          description: The height of the hook in mm
          format: int64
          type: integer
        state:
          description: The state of the hook actuator in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook actuator in human format
          type: string
      type: object
    GetHw_config_export:
      properties: {}
      type: object
    GetHw_config_import:
      properties: {}
      type: object
    GetIo_module:
      properties:
        address:
          description: The address for connecting to the device. it can be a mac address
            or an ip depending on the type of io module
          type: string
        created_by:
          description: The url to the description of the type of this io module
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global unique id across robots that identifies this io
            module
          type: string
        name:
          description: The name of the io module
          type: string
        num_inputs:
          description: The number of inputs that the io module has
          format: int64
          type: integer
        num_outputs:
          description: The number or outputs that the io module has
          format: int64
          type: integer
        type:
          description: The type of the io module. currently supported devices [bluetooth,
            wise].
          type: string
      type: object
    GetIo_module_status:
      properties: {}
      type: object
    GetIo_modules:
      properties:
        guid:
          description: The global unique id across robots that identifies this io
            module
          type: string
        name:
          description: The name of the io module
          type: string
        type:
          description: The type of the io module. currently supported devices [bluetooth,
            wise].
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMap:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this map
          type: string
        map:
          description: If this map is navigation map or not
          format: byte
          type: string
        metadata:
          description: If this map is a web map or not
          format: byte
          type: string
        name:
          description: The name of the map
          type: string
        one_way_map:
          description: If this map is navigation map or not
          format: byte
          type: string
        origin_theta:
          description: The angle in the map of the center of the map relative to the
            robots position
          format: float
          type: number
        origin_x:
          description: The x-coordinate in the map of the center of the map relative
            to the robots position
          format: float
          type: number
        origin_y:
          description: The y-coordinate in the map of the center of the map relative
            to the robots position
          format: float
          type: number
        path_guides:
          description: The url to the list of path guides in this map
          type: string
        paths:
          description: The url to the list of paths in this map
          type: string
        positions:
          description: The url to the list of positions in this map
          type: string
        resolution:
          description: The resolution of the map
          format: float
          type: number
        session_id:
          description: The global id unique across robots of the area containing this
            map
          type: string
      type: object
    GetMap_area_event:
      properties:
        guid:
          description: The global id unique across robots that identifies this area
          type: string
        map:
          description: The url to the map this area belongs to
          type: string
        name:
          description: A name associated with this area
          type: string
        type_id:
          description: The type of area
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMap_path_guides:
      properties:
        guid:
          description: The global unique id across robots that identifies this path
            guide
          type: string
        name:
          description: The name of the path guide
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMap_paths:
      properties:
        goal_pos:
          description: The url to the end position of the path
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        start_pos:
          description: The url to the start position of the path
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMap_positions:
      properties:
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        map:
          description: The url to the map this position belongs to
          type: string
        name:
          description: The name of the position
          type: string
        type_id:
          description: The type of position. see the general description above
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMaps:
      properties:
        guid:
          description: The global id unique across robots that identifies this map
          type: string
        name:
          description: The name of the map
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMe:
      properties:
        guid:
          description: The global unique id across robots that identifies this user
          type: string
        name:
          description: The name of the user
          type: string
        url:
          description: The URL of the resource
          type: string
        user_group:
          description: Url for the user group this user is in
          type: string
        user_group_id:
          description: Global id of the user group this user is in
          type: string
      type: object
    GetMission:
      properties:
        actions:
          description: The url to the list of actions contained in this mission
          type: string
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        definition:
          description: The url to the list of input parameters this mission accepts
          type: string
        description:
          description: The description of the mission
          type: string
        group_id:
          description: The id of the area this mission belongs to, or null if the
            mission belongs to all areas
          type: string
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        has_user_parameters:
          description: Indicates if the mission has dynamic parameters
          type: boolean
        hidden:
          description: If this mission is hidden in the mission list
          type: boolean
        name:
          description: The name of the mission
          type: string
        session_id:
          description: The id of the area this mission belongs to, or null if the
            mission belongs to all areas
          type: string
        valid:
          description: Indicates if the mission contains only existing submissions
          type: boolean
      type: object
    GetMission_action:
      properties:
        action_type:
          description: The id of the type of action
          type: string
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        mission_id:
          description: The id of the mission the action belongs to
          type: string
        parameters:
          items:
            type: object
          type: array
        priority:
          description: The priority of the action
          format: int64
          type: integer
        scope_reference:
          description: Reference to the scope in which the action belongs
          type: string
      type: object
    GetMission_actions:
      properties:
        action_type:
          description: The id of the type of action
          type: string
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        mission_id:
          description: The id of the mission the action belongs to
          type: string
        parameters:
          items:
            type: object
          type: array
        priority:
          description: The priority of the action
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMission_definition:
      properties:
        action_type:
          type: string
        name:
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMission_group:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        feature:
          description: The name of the position
          type: string
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        icon:
          description: The name of the position
          format: byte
          type: string
        name:
          description: The name of the position
          type: string
        priority:
          description: The name of the position
          format: int64
          type: integer
      type: object
    GetMission_groups:
      properties:
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        name:
          description: The name of the position
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMission_queue:
      properties:
        actions:
          description: The list of parameters this mission queue entry accepts
          type: string
        control_posid:
          description: Global id of position used during control states
          type: string
        control_state:
          description: Mission control state. a value above zero indicates that the
            robot needs an external input in order to continue
          format: int64
          type: integer
        created_by:
          description: The url to the description of the type of this element
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        description:
          description: Inerited from mission description, when item was queued
          type: string
        finished:
          description: The date and time when the mission was finished
          format: date-time
          type: string
        id:
          description: The id of the mission queue entry
          format: int64
          type: integer
        message:
          description: The last message produced by the actions in the mission list
          type: string
        mission:
          description: The url to the mission that mission that was executed
          type: string
        mission_id:
          description: The global id of the mission that was executed
          type: string
        ordered:
          description: The date end time when the mission was queued
          format: date-time
          type: string
        parameters:
          items:
            type: object
          type: array
        priority:
          description: The id of the action
          format: int64
          type: integer
        started:
          description: The date and time when the missin was started
          format: date-time
          type: string
        state:
          description: The end state after the mission was executed
          type: string
      type: object
    GetMission_queue_action:
      properties:
        action_id:
          description: The id of the action
          type: string
        action_type:
          description: The name of the action
          type: string
        finished:
          description: The date and time when the action finished
          format: date-time
          type: string
        id:
          description: The id of the action
          format: int64
          type: integer
        message:
          description: The possible message produced by the action
          type: string
        mission_queue_id:
          description: The id of the action
          format: int64
          type: integer
        parameters:
          description: The list of parameters to the action
          items:
            type: object
          type: array
        started:
          description: The date and time when the action was started
          format: date-time
          type: string
        state:
          description: The end state after executing the action
          type: string
        url:
          type: string
      type: object
    GetMission_queue_actions:
      properties:
        action_id:
          description: The id of the action
          type: string
        action_type:
          description: The name of the action
          type: string
        finished:
          description: The date and time when the action finished
          format: date-time
          type: string
        id:
          description: The id of the action
          format: int64
          type: integer
        message:
          description: The possible message produced by the action
          type: string
        mission_queue_id:
          description: The id of the action
          format: int64
          type: integer
        parameters:
          description: The list of parameters to the action
          items:
            type: object
          type: array
        started:
          description: The date and time when the action was started
          format: date-time
          type: string
        state:
          description: The end state after executing the action
          type: string
        url:
          type: string
      type: object
    GetMission_queues:
      properties:
        id:
          description: The id of the mission queue entry
          format: int64
          type: integer
        state:
          description: The end state after the mission was executed
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetMissions:
      properties:
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        name:
          description: The name of the mission
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetModbu:
      properties:
        data_type:
          description: The data type needed
          type: string
        description:
          description: A more detailed explanation of the attribute
          type: string
        id:
          description: The id of the modbus entry
          format: int64
          type: integer
        permissions:
          description: If it is allowed to read or write this element
          type: string
        registers:
          description: The registers on the plc where the data will be stored
          items:
            type: object
          type: array
        title:
          description: A textual description of the desired element
          type: string
        type:
          description: The endpoint to which the element refers
          type: string
      type: object
    GetModbus:
      properties:
        data_type:
          description: The data type needed
          type: string
        description:
          description: A more detailed explanation of the attribute
          type: string
        id:
          description: The id of the modbus entry
          format: int64
          type: integer
        permissions:
          description: If it is allowed to read or write this element
          type: string
        registers:
          description: The registers on the plc where the data will be stored
          items:
            type: object
          type: array
        title:
          description: A textual description of the desired element
          type: string
        type:
          description: The endpoint to which the element refers
          type: string
      type: object
    GetModbus_mission:
      properties:
        coil_id:
          description: The id of the coil to trigger the mission
          format: int64
          type: integer
        created_by:
          description: The url to the description of the type of this modbus mission
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this modbus
            mission
          type: string
        id:
          description: The id of the modbus mission entry
          format: int64
          type: integer
        mission:
          description: The url to the mission details
          type: string
        mission_id:
          description: The global id of the mission that was executed
          type: string
        name:
          description: A more detailed explanation of the attribute
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    GetModbus_missions:
      properties:
        coil_id:
          description: The id of the coil to trigger the mission
          format: int64
          type: integer
        guid:
          description: The global id unique across robots that identifies this modbus
            mission
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPath:
      properties:
        autogenerated:
          description: If the path was autogenerated or not
          type: boolean
        footprint:
          description: The footprint of the robot for which this path was generated
          type: string
        goal_pos:
          description: The url to the end position of the path
          type: string
        goal_pos_id:
          description: The id of the end position of the path
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        last_used:
          description: The date and time of the last time this path was used
          format: date-time
          type: string
        length:
          description: The length of the path in meters
          format: float
          type: number
        map_crc:
          description: The crc for the path
          type: string
        path:
          description: A binary representation of the path
          format: byte
          type: string
        start_pos:
          description: The url to the start position of the path
          type: string
        start_pos_id:
          description: The id of the start position of the path
          type: string
        time:
          description: The time it took to drive the path the first time
          format: float
          type: number
        valid:
          description: If the path is valid or not
          type: boolean
      type: object
    GetPath_guide:
      properties:
        created_by:
          description: The url to the description of the type of this element
          type: string
        created_by_id:
          description: The global unique id of the user that created this path guide
          type: string
        goals_count:
          description: The number of goal positions in the path guide
          format: int64
          type: integer
        guid:
          description: The global unique id across robots that identifies this path
            guide
          type: string
        map_id:
          description: The global id of the map this path guide belongs to
          type: string
        name:
          description: The name of the path guide
          type: string
        options:
          description: The url to the list of position options for this path path
          type: string
        positions:
          description: The url to the list of positions used in this path guide
          type: string
        starts_count:
          description: The number of start positions in the path guide
          format: int64
          type: integer
        vias_count:
          description: The number of via positions in the path guide
          format: int64
          type: integer
      type: object
    GetPath_guide_options:
      properties:
        goals:
          description: The list of options for goal positions
          items:
            $ref: '#/components/schemas/goals'
          type: array
        starts:
          description: The list of options for start positions
          items:
            $ref: '#/components/schemas/starts'
          type: array
        vias:
          description: The list of options for via positions
          items:
            $ref: '#/components/schemas/vias'
          type: array
      type: object
    GetPath_guide_position:
      properties:
        guid:
          description: The global unique id across robots of the position in the list
            of path constraints positions
          type: string
        path_guide_guid:
          description: The global unique id across robots of the path guide this position
            is related to
          type: string
        pos_guid:
          description: The global unique id across robots that identifies this position
          type: string
        pos_type:
          description: The type of position of the guide (start/via/goal)
          type: string
        priority:
          description: The order in which to follow the via positions in the path
            guide
          format: int64
          type: integer
      type: object
    GetPath_guide_positions:
      properties:
        guid:
          description: The global unique id across robots of the position in the list
            of path constraints positions
          type: string
        path_guide_guid:
          description: The global unique id across robots of the path guide this position
            is related to
          type: string
        pos_type:
          description: The type of position of the guide (start/via/goal)
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPath_guides:
      properties:
        guid:
          description: The global unique id across robots that identifies this path
            guide
          type: string
        name:
          description: The name of the path guide
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPath_guides_position:
      properties:
        guid:
          description: The global unique id across robots of the position in the list
            of path constraints positions
          type: string
        path_guide_guid:
          description: The global unique id across robots of the path guide this position
            is related to
          type: string
        pos_guid:
          description: The global unique id across robots that identifies this position
          type: string
        pos_type:
          description: The type of position of the guide (start/via/goal)
          type: string
        priority:
          description: The order in which to follow the via positions in the path
            guide
          format: int64
          type: integer
      type: object
    GetPath_guides_positions:
      properties:
        guid:
          description: The global unique id across robots of the position in the list
            of path constraints positions
          type: string
        path_guide_guid:
          description: The global unique id across robots of the path guide this position
            is related to
          type: string
        pos_type:
          description: The type of position of the guide (start/via/goal)
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPath_guides_precalc:
      properties:
        active:
          description: Boolean indicating if a path guide precalculation is in progress
          type: boolean
        fail_count:
          description: The number of paths that was not possible to precalculate
          format: int64
          type: integer
        message:
          description: Status message from the precalculation module
          type: string
        path_guide_guid:
          description: The global unique id across robots that identifies the path
            guide being precalculated
          type: string
        success_count:
          description: The number of paths that has been successfully calculated
          format: int64
          type: integer
        total_count:
          description: The number of total paths to calculate
          format: int64
          type: integer
      type: object
    GetPaths:
      properties:
        goal_pos:
          description: The url to the end position of the path
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        start_pos:
          description: The url to the start position of the path
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPermission:
      properties:
        endpoint:
          type: string
        guid:
          description: The global unique id across robots that identifies this permission
          type: string
        permission_type:
          description: The permission type
          type: string
        user_group_guid:
          description: The global id of the usergroup
          type: string
      type: object
    GetPos_docking_offsets:
      properties:
        guid:
          description: The global id unique across robots that identifies this docking
            offset
          type: string
        position:
          description: The url to the position
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPosition:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        docking_offsets:
          description: The url to the possible docking offset. if the position does
            not have a docking offset then this field is empty
          type: string
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        help_positions:
          type: string
        map:
          description: The url to the map this position belongs to
          type: string
        map_id:
          description: The global id of the map this positions belongs to
          type: string
        name:
          description: The name of the position
          type: string
        orientation:
          description: The orientation of the position in degrees relative to origo
            of the underlying map
          format: float
          type: number
        parent:
          description: The url to the possible parent position. if the position does
            not have a parent position then this field is empty
          type: string
        parent_id:
          description: The global id of the possible parent position of the current
            position. a parent position is a position related to the current position,
            for instance the parent position of a trolley left entry position is the
            actual trolley position. if the position does not have a parent position
            then this field is empty
          type: string
        pos_x:
          description: The x-coordinate of the position relative to origo of the underlying
            map
          format: float
          type: number
        pos_y:
          description: The y-coordinate of the position relative to origo of the underlying
            map
          format: float
          type: number
        type:
          description: The url to the description of the type of this position
          type: string
        type_id:
          description: The type of position. see the general description above
          format: int64
          type: integer
      type: object
    GetPosition_transition_list:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        goal_pos_id:
          description: The id of the end position for the transition list
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        mission_id:
          description: The guid of the mission in the transition list
          type: string
        start_pos_id:
          description: The id of the start position for the transition list
          type: string
      type: object
    GetPosition_transition_list_from_session:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        goal_pos_id:
          description: The id of the end position for the transition list
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        mission_id:
          description: The guid of the mission in the transition list
          type: string
        start_pos_id:
          description: The id of the start position for the transition list
          type: string
      type: object
    GetPosition_transition_lists:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        goal_pos_id:
          description: The id of the end position for the transition list
          type: string
        guid:
          description: The global id unique across robots that identifies this path
          type: string
        mission_id:
          description: The guid of the mission in the transition list
          type: string
        start_pos_id:
          description: The id of the start position for the transition list
          type: string
      type: object
    GetPosition_type:
      properties:
        hidden:
          description: False if the position is not created by the user
          type: boolean
        id:
          description: Unique id for the position type
          format: int64
          type: integer
        name:
          description: Name of the position type
          type: string
        reachable_for_robot:
          description: True if the robot can actually go to that position
          type: boolean
      type: object
    GetPosition_types:
      properties:
        id:
          description: Unique id for the position type
          format: int64
          type: integer
        name:
          description: Name of the position type
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetPositions:
      properties:
        guid:
          description: The global id unique across robots that identifies this position
          type: string
        map:
          description: The url to the map this position belongs to
          type: string
        name:
          description: The name of the position
          type: string
        type_id:
          description: The type of position. see the general description above
          format: int64
          type: integer
        url:
          description: The URL of the resource
          type: string
      type: object
    GetRegister:
      properties:
        id:
          description: The index of the register
          format: int64
          type: integer
        label:
          description: A label for the register
          type: string
        value:
          description: The value of the register
          format: float
          type: number
      type: object
    GetRegisters:
      properties:
        id:
          description: The index of the register
          format: int64
          type: integer
        label:
          description: A label for the register
          type: string
        url:
          description: The URL of the resource
          type: string
        value:
          description: The value of the register
          format: float
          type: number
      type: object
    GetRemote_support:
      properties: {}
      type: object
    GetRemote_support_log:
      properties: {}
      type: object
    GetRobots:
      properties: {}
      type: object
    GetService_book:
      properties:
        created_at:
          description: Creation time of the service note
          type: string
        created_by:
          description: The url to the user
          type: string
        created_by_id:
          description: The user which created the log
          type: string
        created_by_name:
          description: The user name which created the log
          type: string
        description:
          description: The sevice note
          type: string
        guid:
          description: The global unique id across robots that identifies this service
            note
          type: string
        owner_group:
          description: The url to the owner group
          type: string
        owner_group_guid:
          description: The usergroup which owns the service book
          type: string
        owner_group_name:
          description: The group name which owns the log
          type: string
      type: object
    GetService_books:
      properties:
        created_at:
          description: Creation time of the service note
          type: string
        created_by:
          description: The url to the user
          type: string
        created_by_id:
          description: The user which created the log
          type: string
        created_by_name:
          description: The user name which created the log
          type: string
        description:
          description: The sevice note
          type: string
        guid:
          description: The global unique id across robots that identifies this service
            note
          type: string
        owner_group:
          description: The url to the owner group
          type: string
        owner_group_guid:
          description: The usergroup which owns the service book
          type: string
        owner_group_name:
          description: The group name which owns the log
          type: string
      type: object
    GetSession:
      properties:
        active:
          description: Boolean indicating whether the session is the active session
            in the fleet
          type: boolean
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        description:
          description: A possible description of the area
          type: string
        export:
          type: string
        guid:
          description: The global id unique across robots that identifies this area
          type: string
        maps:
          description: The url to the list of maps that is in this area
          type: string
        name:
          description: The name of the area
          type: string
      type: object
    GetSession_export:
      properties: {}
      type: object
    GetSession_import:
      properties:
        error_message:
          description: A description of this action
          type: string
        missions_to_import:
          type: string
        sessions_imported:
          description: The type of area action
          format: int64
          type: integer
        sessions_total:
          description: A name associated with this area action
          format: int64
          type: integer
        status:
          description: A nice name associated with this area action
          format: int64
          type: integer
      type: object
    GetSession_maps:
      properties:
        guid:
          description: The global id unique across robots that identifies this map
          type: string
        name:
          description: The name of the map
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSession_missions:
      properties:
        guid:
          description: The global id unique across robots that identifies this mission
          type: string
        name:
          description: The name of the mission
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSessions:
      properties:
        guid:
          description: The global id unique across robots that identifies this area
          type: string
        name:
          description: The name of the area
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSetting:
      properties:
        constraints:
          type: string
        default:
          type: string
        description:
          type: string
        fieldtype:
          type: string
        full_name:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_id:
          type: string
        parent_name:
          type: string
        parent_value:
          type: string
        select_group:
          format: int64
          type: integer
        settings_group:
          type: string
        settings_group_id:
          format: int64
          type: integer
        type:
          type: string
        value:
          type: string
      type: object
    GetSetting_advanced:
      properties:
        constraints:
          type: string
        default:
          type: string
        description:
          type: string
        fieldtype:
          type: string
        full_name:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_id:
          type: string
        parent_name:
          type: string
        parent_value:
          type: string
        select_group:
          format: int64
          type: integer
        settings_group:
          type: string
        settings_group_id:
          format: int64
          type: integer
        type:
          type: string
        value:
          type: string
      type: object
    GetSetting_group:
      properties:
        advanced_settings_count:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        priority:
          format: int64
          type: integer
        settings_count:
          format: int64
          type: integer
      type: object
    GetSetting_group_advanced_settings:
      properties:
        default:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_name:
          type: string
        url:
          description: The URL of the resource
          type: string
        value:
          type: string
      type: object
    GetSetting_group_settings:
      properties:
        default:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_name:
          type: string
        url:
          description: The URL of the resource
          type: string
        value:
          type: string
      type: object
    GetSetting_groups:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSettings:
      properties:
        default:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_name:
          type: string
        url:
          description: The URL of the resource
          type: string
        value:
          type: string
      type: object
    GetSettings_advanced:
      properties:
        default:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        parent_name:
          type: string
        url:
          description: The URL of the resource
          type: string
        value:
          type: string
      type: object
    GetShelf_type:
      properties:
        bar_distance:
          description: The distance between the side bars of shelves of this type
          format: float
          type: number
        bar_length:
          description: The length of the side bars of shelves of this type
          format: float
          type: number
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this shelf
            type
          type: string
        height:
          description: The height of shelves of this type
          format: float
          type: number
        length:
          description: The length of shelves of this type
          format: float
          type: number
        name:
          description: The name of the shelf type
          type: string
        offset_x:
          description: The offset in the x-coordinate of shelf of this type
          format: float
          type: number
        offset_y:
          description: The offset in the y-coordinate of shelves of this type
          format: float
          type: number
        width:
          description: The width of shelves of this type
          format: float
          type: number
      type: object
    GetShelf_types:
      properties:
        guid:
          description: The global id unique across robots that identifies this shelf
            type
          type: string
        name:
          description: The name of the shelf type
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSoftware_backup:
      properties:
        date:
          description: The date where the backup was created
          format: date-time
          type: string
        guid:
          description: The guid of the software backup
          type: string
        state:
          description: The state of the software backup
          type: string
        version:
          description: The version of the software backup
          type: string
      type: object
    GetSoftware_backups:
      properties:
        date:
          description: The date where the backup was created
          format: date-time
          type: string
        guid:
          description: The guid of the software backup
          type: string
        state:
          description: The state of the software backup
          type: string
        url:
          description: The URL of the resource
          type: string
        version:
          description: The version of the software backup
          type: string
      type: object
    GetSoftware_lock_self:
      properties:
        lock:
          description: Lock applied
          type: boolean
        lock_pending:
          description: Lock pending
          type: boolean
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSoftware_log:
      properties:
        action:
          description: The action performed (upgrade/restore)
          type: string
        end_time:
          description: The end time of the upgrade
          format: date-time
          type: string
        from:
          description: The software version upgrading from
          type: string
        guid:
          description: The guid of upgrade entry
          type: string
        message:
          description: The status message from upgrade
          type: string
        start_time:
          description: The start time of the upgrade
          format: date-time
          type: string
        state:
          description: The state of the upgrade (succeeded/failed/started
          type: string
        to:
          description: The software version upgrading to
          type: string
      type: object
    GetSoftware_logs:
      properties:
        action:
          description: The action performed (upgrade/restore)
          type: string
        end_time:
          description: The end time of the upgrade
          format: date-time
          type: string
        from:
          description: The software version upgrading from
          type: string
        guid:
          description: The guid of upgrade entry
          type: string
        start_time:
          description: The start time of the upgrade
          format: date-time
          type: string
        state:
          description: The state of the upgrade (succeeded/failed/started
          type: string
        to:
          description: The software version upgrading to
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetSoftware_upgrade:
      properties:
        guid:
          description: The guid of the software upgrade
          type: string
        upload_date:
          description: The upload date of the software upgrade
          format: date-time
          type: string
        version:
          description: The version of the software upgrade
          type: string
      type: object
    GetSoftware_upgrades:
      properties:
        guid:
          description: The guid of the software upgrade
          type: string
        upload_date:
          description: The upload date of the software upgrade
          format: date-time
          type: string
        url:
          description: The URL of the resource
          type: string
        version:
          description: The version of the software upgrade
          type: string
      type: object
    GetSound:
      properties:
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global id unique across robots that identifies this sound
          type: string
        length:
          description: The length of the sound in the format hh:mm:ss
          type: string
        name:
          description: The name of the sound
          type: string
        note:
          description: A possible description of the sound
          type: string
        sound:
          description: A binary representation of the sound
          format: byte
          type: string
        stream:
          description: The url to stream the raw audio
          type: string
        volume:
          description: The volumne of the sound when played
          format: int64
          type: integer
      type: object
    GetSound_stream:
      properties:
        guid:
          description: The global id unique across robots that identifies this sound
          type: string
        length:
          description: The length of the sound in the format hh:mm:ss
          type: string
        name:
          description: The name of the sound
          type: string
        url:
          description: The URL of the resource
          type: string
        volume:
          description: The volumne of the sound when played
          format: int64
          type: integer
      type: object
    GetSounds:
      properties:
        guid:
          description: The global id unique across robots that identifies this sound
          type: string
        length:
          description: The length of the sound in the format hh:mm:ss
          type: string
        name:
          description: The name of the sound
          type: string
        url:
          description: The URL of the resource
          type: string
        volume:
          description: The volumne of the sound when played
          format: int64
          type: integer
      type: object
    GetStatus:
      properties:
        battery_percentage:
          description: The current charge percentage of the battery
          format: float
          type: number
        battery_time_remaining:
          description: The approximate time remaining on the battery during normal
            operation of the robot
          format: int64
          type: integer
        distance_to_next_target:
          description: The distance to the next target of the robot
          format: float
          type: number
        errors:
          description: The list of actions executed as part of the mission
          items:
            $ref: '#/components/schemas/errors'
          type: array
        footprint:
          description: The current footprint of the robot
          type: string
        hook_status:
          $ref: '#/components/schemas/hook_status'
        joystick_low_speed_mode_enabled:
          type: boolean
        joystick_web_session_id:
          description: The id of the web user that has control over the joystick
          type: string
        map_id:
          description: The id of the current map the robot recides in
          type: string
        mission_queue_id:
          description: The id of the current job the robot executes
          format: int64
          type: integer
        mission_queue_url:
          description: The url to the active mission in queue
          type: string
        mission_text:
          description: Status message from mission controller
          type: string
        mode_id:
          description: The id of the current mode of the robot
          format: int64
          type: integer
        mode_key_state:
          description: A textual description of the position of the mode key
          type: string
        mode_text:
          description: A textual description of the current state of the robot
          type: string
        moved:
          format: float
          type: number
        position:
          $ref: '#/components/schemas/position'
        robot_model:
          description: The model of the robot
          type: string
        robot_name:
          description: The name of the robot
          type: string
        safety_system_muted:
          type: boolean
        serial_number:
          description: The model of the robot
          type: string
        session_id:
          description: The id of the session the robot recides in
          type: string
        state_id:
          description: The id of the current state of the robot
          format: int64
          type: integer
        state_text:
          description: A textual description of the current state of the robot
          type: string
        unloaded_map_changes:
          type: boolean
        uptime:
          description: The uptime of the robot
          format: int64
          type: integer
        user_prompt:
          $ref: '#/components/schemas/user_prompt'
        velocity:
          $ref: '#/components/schemas/velocity'
      type: object
    GetSystem_info:
      properties: {}
      type: object
    GetUser:
      properties:
        create_time:
          description: Creation time of the user
          type: string
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        dashboard_id:
          type: string
        email:
          description: The email of the user
          type: string
        guid:
          description: The global unique id across robots that identifies this user
          type: string
        name:
          description: The name of the user
          type: string
        single_dashboard:
          type: boolean
        update_time:
          description: Last time the user was updated
          type: string
        url:
          description: Url to this user
          type: string
        user_group:
          description: Url for the user group this user is in
          type: string
        user_group_id:
          description: Global id of the user group this user is in
          type: string
        username:
          description: The username of the user
          type: string
      type: object
    GetUser_group:
      properties:
        create_time:
          description: Creation time of the usergroup
          type: string
        created_by:
          description: The url to the description of the type of this position
          type: string
        created_by_id:
          description: The global id of the user who created this entry
          type: string
        guid:
          description: The global unique id across robots that identifies this usergroup
          type: string
        name:
          description: Name of the usergroup
          type: string
        update_time:
          description: Last time the usergroup was updated
          type: string
      type: object
    GetUser_group_permission:
      properties:
        endpoint:
          type: string
        guid:
          description: The global unique id across robots that identifies this permission
          type: string
        permission_type:
          description: The permission type
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetUser_groups:
      properties:
        guid:
          description: The global unique id across robots that identifies this usergroup
          type: string
        name:
          description: Name of the usergroup
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetUser_me_permissions:
      properties:
        endpoint:
          type: string
        guid:
          description: The global unique id across robots that identifies this permission
          type: string
        permission_type:
          description: The permission type
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetUsers:
      properties:
        guid:
          description: The global unique id across robots that identifies this user
          type: string
        name:
          description: The name of the user
          type: string
        url:
          description: The URL of the resource
          type: string
        user_group:
          description: Url for the user group this user is in
          type: string
        user_group_id:
          description: Global id of the user group this user is in
          type: string
      type: object
    GetUsers_auth:
      properties:
        expiration_time:
          format: date-time
          type: string
        ip:
          type: string
        login_time:
          format: date-time
          type: string
        token:
          type: string
        user_id:
          type: string
      type: object
    GetWifi:
      properties: {}
      type: object
    GetWifi_connection:
      properties:
        bssid:
          description: Access point mac address
          type: string
        connected:
          description: Connected to the network of this connection
          type: boolean
        device:
          description: Device to use for this connection
          type: string
        dns:
          description: Dnss for the connection
          type: string
        ip_address:
          description: Ip address for the connection
          type: string
        last_connected:
          description: Date and time for when the connection was last successfully
            connected
          type: string
        mac:
          description: Network adapter mac address
          type: string
        name:
          description: Name or id of the connection
          type: string
        netmask:
          description: Netmask for the connection
          type: string
        security:
          description: The security method used by the connection
          type: string
        type:
          description: Connection type e.g. 802-11-wireless
          type: string
        url:
          description: Specific connection
          type: string
        uuid:
          description: Uuid of the connection
          type: string
      type: object
    GetWifi_connections:
      properties:
        bssid:
          description: Access point mac address
          type: string
        connected:
          description: Connected to the network of this connection
          type: boolean
        mac:
          description: Network adapter mac address
          type: string
        name:
          description: Name or id of the connection
          type: string
        url:
          description: The URL of the resource
          type: string
        uuid:
          description: Uuid of the connection
          type: string
      type: object
    GetWifi_network:
      properties:
        channel:
          description: Network channel
          format: int64
          type: integer
        connected:
          description: Connected to this network
          type: boolean
        device:
          description: Device
          type: string
        frequency:
          description: Network frequency
          type: string
        guid:
          description: The guid of the wifi
          type: string
        security:
          description: Security
          type: string
        ssid:
          description: Ssid of the wlan
          type: string
        strength:
          description: Signal strength
          format: int64
          type: integer
        url:
          description: Specific wifi network
          type: string
      type: object
    GetWifi_networks:
      properties:
        connected:
          description: Connected to this network
          type: boolean
        guid:
          description: The guid of the wifi
          type: string
        ssid:
          description: Ssid of the wlan
          type: string
        url:
          description: The URL of the resource
          type: string
      type: object
    GetWorld_model:
      properties: {}
      type: object
    mqttPostAction_definition:
      properties:
        parameters:
          items:
            type: object
          type: array
      required:
        - parameters
      type: object
    PostArea_events:
      properties:
        actions:
          items:
            type: object
          type: array
        created_by_id:
          type: string
        guid:
          type: string
        map_id:
          type: string
        name:
          description: 'Max length: 255'
          type: string
        polygon:
          items:
            type: object
          type: array
        type_id:
          format: int64
          type: integer
      required:
        - map_id
        - polygon
        - type_id
      type: object
    PostBluetooth_relays:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        hardware_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
      required:
        - hardware_id
        - name
      type: object
    PostBluetooth_status:
      properties:
        module_guid:
          type: string
      required:
        - module_guid
      type: object
    PostCart_calibrations:
      properties:
        created_by_id:
          type: string
        drive_height:
          format: int64
          type: integer
        entry_height:
          format: int64
          type: integer
        guid:
          type: string
        lock_height:
          format: int64
          type: integer
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        qw:
          format: float
          type: number
        qx:
          format: float
          type: number
        qy:
          format: float
          type: number
        qz:
          format: float
          type: number
        standard:
          type: boolean
        x:
          format: float
          type: number
        y:
          format: float
          type: number
        z:
          format: float
          type: number
      required:
        - drive_height
        - entry_height
        - lock_height
        - name
        - qw
        - qx
        - qy
        - qz
        - standard
        - x
        - y
        - z
      type: object
    PostCart_types:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        height:
          format: float
          type: number
        length:
          format: float
          type: number
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        offset_locked_wheels:
          format: float
          type: number
        width:
          format: float
          type: number
      required:
        - height
        - length
        - name
        - offset_locked_wheels
        - width
      type: object
    PostCarts:
      properties:
        cart_calibration_id:
          type: string
        cart_type_id:
          type: string
        created_by_id:
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
      required:
        - cart_calibration_id
        - cart_type_id
        - name
      type: object
    PostDashboard_widgets:
      properties:
        dashboard_id:
          type: string
        guid:
          type: string
        settings:
          type: string
      required:
        - dashboard_id
      type: object
    PostDashboards:
      properties:
        created_by_id:
          type: string
        fleet_dashboard:
          type: boolean
        guid:
          type: string
        name:
          description: 'Min length: 1, Max length: 128'
          type: string
      required:
        - name
      type: object
    PostDocking_offsets:
      properties:
        guid:
          type: string
        orientation_offset:
          format: float
          type: number
        pos_id:
          type: string
        x_offset:
          format: float
          type: number
        y_offset:
          format: float
          type: number
      required:
        - orientation_offset
        - pos_id
        - x_offset
        - y_offset
      type: object
    PostError_reports:
      properties:
        description:
          description: 'Min length: 1, Max length: 255'
          type: string
      required:
        - description
      type: object
    PostFactory_reset:
      properties:
        file:
          type: string
      type: object
    PostHw_config_import:
      properties:
        file:
          type: string
      required:
        - file
      type: object
    PostIo_module_status:
      properties: {}
      type: object
    PostIo_modules:
      properties:
        address:
          type: string
        created_by_id:
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
        num_inputs:
          format: int64
          type: integer
        num_outputs:
          format: int64
          type: integer
        type:
          type: string
      required:
        - address
        - name
      type: object
    PostMaps:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        map:
          format: byte
          type: string
        metadata:
          format: byte
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        one_way_map:
          format: byte
          type: string
        origin_theta:
          format: float
          type: number
        origin_x:
          format: float
          type: number
        origin_y:
          format: float
          type: number
        resolution:
          format: float
          type: number
        session_id:
          type: string
      required:
        - map
        - metadata
        - name
        - origin_theta
        - origin_x
        - origin_y
        - resolution
        - session_id
      type: object
    PostMission_actions:
      properties:
        action_type:
          description: 'Min length: 1, Max length: 255'
          type: string
        guid:
          type: string
        mission_id:
          type: string
        parameters:
          items:
            type: object
          type: array
        priority:
          format: int64
          type: integer
        scope_reference:
          type: string
      required:
        - action_type
        - mission_id
        - parameters
        - priority
      type: object
    PostMission_groups:
      properties:
        created_by_id:
          type: string
        feature:
          description: 'Min length: 1, Max length: 63'
          type: string
        guid:
          type: string
        icon:
          format: byte
          type: string
        name:
          description: 'Min length: 1, Max length: 63'
          type: string
        priority:
          format: int64
          type: integer
      required:
        - feature
        - icon
        - name
        - priority
      type: object
    PostMission_queues:
      properties:
        message:
          description: 'Max length: 200'
          type: string
        mission_id:
          type: string
        parameters:
          items:
            type: object
          type: array
        priority:
          format: int64
          type: integer
      required:
        - mission_id
      type: object
    PostMissions:
      properties:
        created_by_id:
          type: string
        description:
          description: 'Max length: 255'
          type: string
        group_id:
          type: string
        guid:
          type: string
        hidden:
          type: boolean
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
        session_id:
          type: string
      required:
        - group_id
        - name
      type: object
    PostModbus_missions:
      properties:
        coil_id:
          format: int64
          type: integer
        created_by_id:
          type: string
        guid:
          type: string
        mission_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 200'
          type: string
        parameters:
          items:
            type: object
          type: array
      required:
        - coil_id
        - mission_id
        - name
      type: object
    PostPath_guide_positions:
      properties:
        guid:
          type: string
        path_guide_guid:
          type: string
        pos_guid:
          type: string
        pos_type:
          type: string
        priority:
          format: int64
          type: integer
      required:
        - path_guide_guid
        - pos_guid
        - pos_type
      type: object
    PostPath_guides:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        map_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 128'
          type: string
      required:
        - map_id
        - name
      type: object
    PostPath_guides_positions:
      properties:
        guid:
          type: string
        path_guide_guid:
          type: string
        pos_guid:
          type: string
        pos_type:
          type: string
        priority:
          format: int64
          type: integer
      required:
        - path_guide_guid
        - pos_guid
        - pos_type
      type: object
    PostPath_guides_precalc:
      properties:
        command:
          type: string
        guid:
          type: string
      required:
        - command
        - guid
      type: object
    PostPaths:
      properties:
        autogenerated:
          type: boolean
        footprint:
          description: 'Max length: 255'
          type: string
        goal_pos_id:
          type: string
        guid:
          type: string
        last_used:
          format: date-time
          type: string
        length:
          format: float
          type: number
        map_crc:
          description: 'Min length: 32, Max length: 32'
          type: string
        path:
          format: byte
          type: string
        start_pos_id:
          type: string
        time:
          format: float
          type: number
        valid:
          type: boolean
      required:
        - autogenerated
        - footprint
        - goal_pos_id
        - last_used
        - length
        - map_crc
        - path
        - start_pos_id
        - time
        - valid
      type: object
    PostPosition_transition_lists:
      properties:
        created_by_id:
          type: string
        goal_pos_id:
          type: string
        guid:
          type: string
        mission_id:
          type: string
        start_pos_id:
          type: string
      required:
        - goal_pos_id
        - mission_id
        - start_pos_id
      type: object
    PostPositions:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        map_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        orientation:
          format: float
          type: number
        parent_id:
          type: string
        pos_x:
          format: float
          type: number
        pos_y:
          format: float
          type: number
        type_id:
          format: int64
          type: integer
      required:
        - map_id
        - name
        - orientation
        - pos_x
        - pos_y
        - type_id
      type: object
    PostRegister:
      properties:
        label:
          description: 'Min length: 1, Max length: 50'
          type: string
        value:
          format: float
          type: number
      type: object
    PostRobots:
      properties:
        robots:
          items:
            type: object
          type: array
      required:
        - robots
      type: object
    PostService_books:
      properties:
        description:
          description: 'Min length: 1, Max length: 2056'
          type: string
        guid:
          type: string
      required:
        - description
      type: object
    PostSession_import:
      properties:
        file:
          type: string
      required:
        - file
      type: object
    PostSessions:
      properties:
        created_by_id:
          type: string
        description:
          description: 'Max length: 255'
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
      required:
        - name
      type: object
    PostShelf_types:
      properties:
        bar_distance:
          format: float
          type: number
        bar_length:
          format: float
          type: number
        created_by_id:
          type: string
        guid:
          type: string
        height:
          format: float
          type: number
        length:
          format: float
          type: number
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        offset_x:
          format: float
          type: number
        offset_y:
          format: float
          type: number
        width:
          format: float
          type: number
      required:
        - bar_distance
        - bar_length
        - height
        - length
        - name
        - offset_x
        - offset_y
        - width
      type: object
    PostSounds:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        note:
          description: 'Max length: 255'
          type: string
        sound:
          format: binary
          type: string
        volume:
          format: int64
          type: integer
      required:
        - name
        - sound
      type: object
    PostUser_group_permission:
      properties:
        endpoint:
          description: 'Min length: 1, Max length: 255'
          type: string
        guid:
          type: string
        permission_type:
          type: string
      required:
        - endpoint
        - permission_type
      type: object
    PostUser_groups:
      properties:
        created_by_id:
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 2, Max length: 255'
          type: string
      required:
        - name
      type: object
    PostUsers:
      properties:
        created_by_id:
          type: string
        dashboard_id:
          type: string
        email:
          type: string
        guid:
          type: string
        name:
          description: 'Min length: 2, Max length: 255'
          type: string
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          description: 'Min length: 2, Max length: 63'
          type: string
      required:
        - name
        - password
        - user_group_id
        - username
      type: object
    PostUsers_auth:
      properties:
        password:
          type: string
        pincode:
          type: string
        username:
          description: 'Min length: 2, Max length: 63'
          type: string
      type: object
    PostWifi_connection:
      properties:
        address:
          type: string
        device:
          type: string
        dns:
          type: string
        gateway:
          type: string
        netmask:
          type: string
        security:
          type: string
        ssid:
          type: string
      required:
        - ssid
      type: object
    PostWifi_connections:
      properties:
        address:
          type: string
        device:
          type: string
        dns:
          type: string
        gateway:
          type: string
        netmask:
          type: string
        security:
          type: string
        ssid:
          type: string
      required:
        - ssid
      type: object
    PostWorld_model:
      properties:
        robot_ip:
          type: string
        world_model:
          items:
            type: object
          type: array
      type: object
    PutArea_event:
      properties:
        actions:
          items:
            type: object
          type: array
        map_id:
          type: string
        name:
          description: 'Max length: 255'
          type: string
        polygon:
          items:
            type: object
          type: array
        type_id:
          format: int64
          type: integer
      type: object
    PutBluetooth_relay:
      properties:
        hardware_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
      type: object
    PutBluetooth_status:
      properties:
        'on':
          type: boolean
        port:
          format: int64
          type: integer
        timeout:
          format: int64
          type: integer
      type: object
    PutCart:
      properties:
        cart_calibration_id:
          type: string
        cart_type_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
      type: object
    PutCart_calibration:
      properties:
        drive_height:
          format: int64
          type: integer
        entry_height:
          format: int64
          type: integer
        lock_height:
          format: int64
          type: integer
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        qw:
          format: float
          type: number
        qx:
          format: float
          type: number
        qy:
          format: float
          type: number
        qz:
          format: float
          type: number
        standard:
          type: boolean
        x:
          format: float
          type: number
        y:
          format: float
          type: number
        z:
          format: float
          type: number
      type: object
    PutCart_type:
      properties:
        height:
          format: float
          type: number
        length:
          format: float
          type: number
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        offset_locked_wheels:
          format: float
          type: number
        width:
          format: float
          type: number
      type: object
    PutDashboard:
      properties:
        name:
          description: 'Min length: 1, Max length: 128'
          type: string
      type: object
    PutDashboard_widget:
      properties:
        settings:
          type: string
      type: object
    PutDocking_offset:
      properties:
        orientation_offset:
          format: float
          type: number
        x_offset:
          format: float
          type: number
        y_offset:
          format: float
          type: number
      type: object
    PutHook_brake:
      properties:
        state:
          description: 'Choices are: {0, 1}'
          format: int64
          type: integer
      type: object
    PutHook_gripper:
      properties:
        state:
          description: 'Choices are: {0, 1}'
          format: int64
          type: integer
      type: object
    PutHook_height:
      properties:
        height:
          format: int64
          type: integer
        home:
          type: boolean
      type: object
    PutIo_module:
      properties:
        address:
          type: string
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
        num_inputs:
          format: int64
          type: integer
        num_outputs:
          format: int64
          type: integer
        type:
          description: 'Choices are: { " bluetooth " , " wise " }'
          type: string
      type: object
    PutIo_module_status:
      properties:
        'on':
          type: boolean
        port:
          format: int64
          type: integer
        timeout:
          format: int64
          type: integer
      type: object
    PutMap:
      properties:
        map:
          format: byte
          type: string
        metadata:
          format: byte
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        one_way_map:
          format: byte
          type: string
        origin_theta:
          format: float
          type: number
        origin_x:
          format: float
          type: number
        origin_y:
          format: float
          type: number
        resolution:
          format: float
          type: number
      type: object
    PutMe:
      properties:
        dashboard_id:
          type: string
        email:
          type: string
        name:
          description: 'Min length: 2, Max length: 255'
          type: string
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          description: 'Min length: 2, Max length: 63'
          type: string
      type: object
    PutMission:
      properties:
        description:
          description: 'Max length: 255'
          type: string
        group_id:
          type: string
        hidden:
          type: boolean
        name:
          description: 'Min length: 1, Max length: 255'
          type: string
        session_id:
          type: string
      type: object
    PutMission_action:
      properties:
        parameters:
          items:
            type: object
          type: array
        priority:
          format: int64
          type: integer
        scope_reference:
          type: string
      type: object
    PutMission_group:
      properties:
        feature:
          description: 'Min length: 1, Max length: 63'
          type: string
        icon:
          format: byte
          type: string
        name:
          description: 'Min length: 1, Max length: 63'
          type: string
        priority:
          format: int64
          type: integer
      type: object
    PutMission_queue:
      properties:
        cmd:
          format: int64
          type: integer
        description:
          description: 'Max length: 200'
          type: string
        mission_id:
          type: string
        priority:
          format: int64
          type: integer
      type: object
    PutModbus_mission:
      properties:
        coil_id:
          format: int64
          type: integer
        mission_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 200'
          type: string
        parameters:
          items:
            type: object
          type: array
      type: object
    PutPath:
      properties:
        autogenerated:
          type: boolean
        footprint:
          description: 'Max length: 255'
          type: string
        goal_pos_id:
          type: string
        last_used:
          format: date-time
          type: string
        length:
          format: float
          type: number
        map_crc:
          description: 'Min length: 32, Max length: 32'
          type: string
        path:
          format: byte
          type: string
        start_pos_id:
          type: string
        time:
          format: float
          type: number
        valid:
          type: boolean
      type: object
    PutPath_guide:
      properties:
        map_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 128'
          type: string
      type: object
    PutPath_guide_position:
      properties:
        pos_guid:
          type: string
        priority:
          format: int64
          type: integer
      type: object
    PutPath_guides_position:
      properties:
        pos_guid:
          type: string
        priority:
          format: int64
          type: integer
      type: object
    PutPosition:
      properties:
        map_id:
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        orientation:
          format: float
          type: number
        parent_id:
          type: string
        pos_x:
          format: float
          type: number
        pos_y:
          format: float
          type: number
        type_id:
          format: int64
          type: integer
      type: object
    PutPosition_transition_list:
      properties:
        goal_pos_id:
          type: string
        mission_id:
          type: string
        start_pos_id:
          type: string
      type: object
    PutRegister:
      properties:
        label:
          description: 'Min length: 1, Max length: 50'
          type: string
        value:
          format: float
          type: number
      type: object
    PutRemote_support:
      properties:
        connection_countdown:
          format: float
          type: number
      type: object
    PutSession:
      properties:
        active:
          type: boolean
        description:
          description: 'Max length: 255'
          type: string
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
      type: object
    PutSetting:
      properties:
        value:
          description: 'Max length: 700'
          type: string
      type: object
    PutSetting_advanced:
      properties:
        value:
          description: 'Max length: 700'
          type: string
      type: object
    PutShelf_type:
      properties:
        bar_distance:
          format: float
          type: number
        bar_length:
          format: float
          type: number
        height:
          format: float
          type: number
        length:
          format: float
          type: number
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        offset_x:
          format: float
          type: number
        offset_y:
          format: float
          type: number
        width:
          format: float
          type: number
      type: object
    PutSoftware_lock_self:
      properties:
        lock:
          type: boolean
      type: object
    PutSound:
      properties:
        name:
          description: 'Min length: 1, Max length: 40'
          type: string
        note:
          description: 'Max length: 255'
          type: string
        sound:
          format: binary
          type: string
        volume:
          format: int64
          type: integer
      type: object
    PutStatus:
      properties:
        answer:
          description: 'Min length: 1, Max length: 255'
          type: string
        clear_error:
          type: boolean
        datetime:
          format: date-time
          type: string
        guid:
          type: string
        map_id:
          type: string
        mode_id:
          description: 'Choices are: {3, 7}'
          format: int64
          type: integer
        name:
          description: 'Min length: 1, Max length: 20'
          type: string
        position:
          type: object
        serial_number:
          type: string
        state_id:
          description: 'Choices are: {3, 4, 11}, State: {Ready, Pause, Manualcontrol}'
          format: int64
          type: integer
        web_session_id:
          type: string
      type: object
    PutUser:
      properties:
        dashboard_id:
          type: string
        email:
          type: string
        name:
          description: 'Min length: 2, Max length: 255'
          type: string
        password:
          type: string
        pincode:
          type: string
        single_dashboard:
          type: boolean
        user_group_id:
          type: string
        username:
          description: 'Min length: 2, Max length: 63'
          type: string
      type: object
    PutUser_group:
      properties:
        username:
          description: 'Min length: 2, Max length: 63'
          type: string
      type: object
    brake:
      properties:
        braked:
          description: Whether the hook brake is activated or not
          type: boolean
        state:
          description: The state of the hook brake in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook brake in human format
          type: string
      type: object
    cart:
      properties:
        height:
          description: The height of the attached trolley
          format: float
          type: number
        id:
          description: The id of the attached trolley
          format: float
          type: number
        length:
          description: The length of the attached trolley
          format: float
          type: number
        offset_locked_wheels:
          description: The distance from front of the attached trolley to the locked
            wheels
          format: float
          type: number
        width:
          description: The width of the attached trolley
          format: float
          type: number
      type: object
    errors:
      properties:
        code:
          description: The error code
          format: int64
          type: integer
        description:
          description: Description of the error
          type: string
        module:
          description: The module reporting the error
          type: string
      type: object
    goals:
      properties:
        name:
          description: The name of the position
          type: string
        pos_guid:
          description: The global unique id across robots that identifies this position
          type: string
      type: object
    gripper:
      properties:
        closed:
          description: Whether the hook gripper is closed or not
          type: boolean
        state:
          description: The state of the hook gripper in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook gripper in human format
          type: string
      type: object
    height:
      properties:
        height:
          description: The height of the hook in mm
          format: float
          type: number
        state:
          description: The state of the hook height control in machine format
          format: int64
          type: integer
        state_string:
          description: The state of the hook height control in human format
          type: string
      type: object
    hook_status:
      properties:
        angle:
          description: The current angle of the hook
          format: float
          type: number
        available:
          description: Boolean indicating if the hook available on this robot
          type: boolean
        braked:
          description: Boolean indicating if the hook brake is activated
          type: boolean
        cart:
          $ref: '#/components/schemas/cart'
        cart_attached:
          description: Boolean indicating if a trolley is currently attached
          type: boolean
        height:
          description: The current height of the hook
          format: float
          type: number
        length:
          description: The length of the hook
          format: float
          type: number
      type: object
    position:
      properties:
        orientation:
          description: The orientation of the current position of the robot
          format: float
          type: number
        x:
          description: The x-coordinate of the current position of the robot
          format: float
          type: number
        y:
          description: The y-coordinate of the current position of the robot
          format: float
          type: number
      type: object
    starts:
      properties:
        name:
          description: The name of the position
          type: string
        pos_guid:
          description: The global unique id across robots that identifies this position
          type: string
      type: object
    user_prompt:
      properties:
        guid:
          type: string
        options:
          items:
            type: string
          type: array
        question:
          type: string
        timeout:
          format: float
          type: number
        user_group:
          type: string
      type: object
    velocity:
      properties:
        angular:
          description: The angular speed of the robot in degrees/s
          format: float
          type: number
        linear:
          description: The linear speed of the robot in m/s
          format: float
          type: number
      type: object
    vias:
      properties:
        name:
          description: The name of the position
          type: string
        pos_guid:
          description: The global unique id across robots that identifies this position
          type: string
      type: object
  securitySchemes:
    mir:
      description: 'username followed by a colon and the password sha-256 encoded.
        Ex: BASE64(\<username\>:SHA-256(\<password\>))'
      scheme: Basic
      type: http
info:
  description: Automatically converted from v270 pdf
  title: MIR100 Rest Interface
  version: 2.7.0
openapi: 3.0.1
paths:
  /actions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAction_definitions'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of action definitions
  /actions/{action_type}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The action_type to search for
          in: path
          name: action_type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAction_definition'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the action. It displays the parameters of
        the action and the limits for the values among others
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The action_type to add the new resource to
          in: path
          name: action_type
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAction_definition'
        description: The details of the action_definition
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAction_definition'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new action definition with the specified action_type
  /area_events:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetArea_events'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of area events
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostArea_events'
        description: The details of the area_events
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_events'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new area event
  /area_events/action_definitions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_action_definitions'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve definitions of area actions and their parameters
  /area_events/action_definitions/{action_type}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The action_type to search for
          in: path
          name: action_type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_action_definition'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the action. It displays the parameters of
        the action and the limits for the values among others
  /area_events/definitions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_events_definitions'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve definitions of areas and their actions
  /area_events/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the area event with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_event'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the area event with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutArea_event'
        description: The new values of the area_event
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArea_event'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the area event with the specified GUID
  /bluetooth:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Disconnect the Bluetooth device
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_status'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status of the Bluetooth connection
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBluetooth_status'
        description: The details of the bluetooth_status
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_status'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Connect to the Bluetooth device with the given GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBluetooth_status'
        description: The new values of the bluetooth_status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_status'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the outputs of the connected Bluetooth device
  /bluetooth/scan:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetBluetooth'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Start the discovery of Bluetooth devices
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Retrieve the list of discovered devices
  /bluetooth_relays:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetBluetooth_relays'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of configured Bluetooth devices
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBluetooth_relays'
        description: The details of the bluetooth_relays
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_relays'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new Bluetooth device
  /bluetooth_relays/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the Bluetooth device with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_relay'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the Bluetooth device with the specified
        GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBluetooth_relay'
        description: The new values of the bluetooth_relay
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBluetooth_relay'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the Bluetooth device with the specified GUID
  /cart_calibrations:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart_calibrations'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of cart calibrations
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCart_calibrations'
        description: The details of the cart_calibrations
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibrations'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new cart calibration
  /cart_calibrations/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the cart calibration with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibration'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the cart calibration with the specified
        GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart_calibration'
        description: The new values of the cart_calibration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_calibration'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the cart calibration with the specified GUID
  /cart_types:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCart_types'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of cart types
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCart_types'
        description: The details of the cart_types
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_types'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new cart type
  /cart_types/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the cart type with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_type'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the cart type with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart_type'
        description: The new values of the cart_type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart_type'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the cart type with the specified GUID
  /carts:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetCarts'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of carts
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCarts'
        description: The details of the carts
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCarts'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new cart
  /carts/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the cart with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the cart with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCart'
        description: The new values of the cart
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCart'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the cart with the specified GUID
  /changes/me:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Deletes all data owned by the current user or users with lower authority
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChanges_me'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Makes a list of all data owned by the current user or users with lower
        authority
  /dashboards:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetDashboards'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of dashboards
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDashboards'
        description: The details of the dashboards
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboards'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new dashboard
  /dashboards/{dashboard_id}/widgets:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The dashboard_id to search for
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetDashboard_widgets'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of widgets of the dashboard with the specified dashboard
        ID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The dashboard_id to add the new resource to
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDashboard_widgets'
        description: The details of the dashboard_widgets
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widgets'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new widget to the dashboard with the specified dashboard ID
  /dashboards/{dashboard_id}/widgets/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The dashboard_id to delete
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the widget with the specified GUID from the dashboard with the
        specified dashboard ID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The dashboard_id to search for
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widget'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the widget with the specified GUID in the
        dashboard with the specified dashboard ID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The dashboard_id to modify
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDashboard_widget'
        description: The new values of the dashboard_widget
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard_widget'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the widget with the specified GUID in the dashboard
        with the specified dashboard ID
  /dashboards/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the dashboard with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the dashboard with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDashboard'
        description: The new values of the dashboard
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the dashboard with the specified GUID
  /docking_offsets:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetDocking_offsets'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of docking offsets
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDocking_offsets'
        description: The details of the docking_offsets
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offsets'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new docking offset. The only positions that can have docking
        offsets are Charging stations, V markers and VL markers
  /docking_offsets/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the docking offset with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offset'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the docking offset with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDocking_offset'
        description: The new values of the docking_offset
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocking_offset'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the docking offset with the specified GUID
  /factory_reset:
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFactory_reset'
        description: The details of the factory_reset
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFactory_reset'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Clean and migrate the database. Keep hardware configurations
  /hook/brake:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_brake'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the state of the Hook brake
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_brake'
        description: The new values of the hook_brake
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_brake'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Activate or release the Hook brake
  /hook/gripper:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_gripper'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the state of the Hook gripper
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_gripper'
        description: The new values of the hook_gripper
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_gripper'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Open or close the Hook gripper
  /hook/height:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_height'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the height of the Hook
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHook_height'
        description: The new values of the hook_height
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook_height'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the height of the Hook
  /hook/status:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHook'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the extended status of the Hook
  /hw/export:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHw_config_export'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Download a file containing the hardware configuration of the robot
  /hw/import:
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHw_config_import'
        description: The details of the hw_config_import
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHw_config_import'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Import the hardware configuration contained in the file into the robot
  /io_modules:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetIo_modules'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of configured IO modules
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIo_modules'
        description: The details of the io_modules
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_modules'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new IO module
  /io_modules/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the IO device with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about a IO device with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIo_module'
        description: The new values of the io_module
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the IO device with the specified GUID
  /io_modules/{guid}/status:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Disconnect from the IO module with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status of the connection to the IO module with the specified
        GUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to add the new resource to
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIo_module_status'
        description: The details of the io_module_status
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Connect to theIO module with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIo_module_status'
        description: The new values of the io_module_status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIo_module_status'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the outputs of the connected IO module with specified GUID
  /log/error_reports:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase ALL the error reports
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_reports'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of error reports
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostError_reports'
        description: The details of the error_reports
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_reports'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Generate a new error report. This will record the 30s previous to this
        call in a file.
  /log/error_reports/{id}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to delete
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the error report with the specified ID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_report'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the error report with the specified ID
  /log/error_reports/{id}/download:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetError_report_download'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Download the file containing the error report with the specified ID
  /maps:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMaps'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of maps
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMaps'
        description: The details of the maps
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaps'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new map
  /maps/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the map with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the map with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMap'
        description: The new values of the map
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMap'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the map with the specified GUID
  /maps/{map_id}/area_events:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The map_id to search for
          in: path
          name: map_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMap_area_event'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of area events that belong to the map with the specified
        map ID
  /maps/{map_id}/path_guides:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The map_id to search for
          in: path
          name: map_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMap_path_guides'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of path guides that belong to the map with the specified
        map ID
  /maps/{map_id}/paths:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The map_id to search for
          in: path
          name: map_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMap_paths'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of paths that belong to the map with the specified
        map ID
  /maps/{map_id}/positions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The map_id to search for
          in: path
          name: map_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMap_positions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of positions that belong to the map with the specified
        map ID
  /mission_groups:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMission_groups'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of mission groups
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_groups'
        description: The details of the mission_groups
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_groups'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new mission group
  /mission_groups/{group_id}/missions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The group_id to search for
          in: path
          name: group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetGroup_missions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of missions that belong to the group with the specified
        group ID
  /mission_groups/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the mission group with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_group'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the mission group with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_group'
        description: The new values of the mission_group
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_group'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the mission group with the specified GUID
  /mission_groups/{mission_group_id}/actions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The mission_group_id to search for
          in: path
          name: mission_group_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroup_action_definition'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of action definitions from the mission group with
        the specified mission group ID
  /mission_queue:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Abort all the pending and executing missions from the mission queue
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMission_queues'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of missions in the queue. Finished, failed, pending
        and executing missions will be displayed here
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_queues'
        description: The details of the mission_queues
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queues'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new mission to the mission queue. The mission will always go
        to the end of the queue
  /mission_queue/{id}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to delete
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Abort the mission with the specified ID in the mission queue
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the mission with the specified ID in the
        mission queue
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to modify
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_queue'
        description: The new values of the mission_queue
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the mission with the specified ID in the mission
        queue
  /mission_queue/{mission_queue_id}/actions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The mission_queue_id to search for
          in: path
          name: mission_queue_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue_actions'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of actions from the mission with the specified ID
        in the mission queue
  /mission_queue/{mission_queue_id}/actions/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - description: The mission_queue_id to search for
          in: path
          name: mission_queue_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_queue_action'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the action with the specified ID from the
        mission with the specified ID in the mission queue
  /missions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMissions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of missions
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMissions'
        description: The details of the missions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMissions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new mission
  /missions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the mission with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the mission with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission'
        description: The new values of the mission
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the mission with the specified GUID
  /missions/{guid}/definition:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMission_definition'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the mission with the specified GUID as an action definition
        that can be inserted in another mission
  /missions/{mission_id}/actions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The mission_id to search for
          in: path
          name: mission_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMission_actions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of actions that belong to the mission with the specified
        mission ID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The mission_id to add the new resource to
          in: path
          name: mission_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMission_actions'
        description: The details of the mission_actions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_actions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new action to the mission with the specified mission ID
  /missions/{mission_id}/actions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The mission_id to delete
          in: path
          name: mission_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the action with the specified GUID from the mission with the
        specified mission ID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The mission_id to search for
          in: path
          name: mission_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_action'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the action with the specified GUID that
        belongs to the mission with the specified mission ID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The mission_id to modify
          in: path
          name: mission_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMission_action'
        description: The new values of the mission_action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMission_action'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the action with the specified GUID that belongs
        to the mission with the specified mission ID
  /modbus:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the modbus registers linked to actions
  /modbus/missions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetModbus_missions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of coils that can trigger a mission
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostModbus_missions'
        description: The details of the modbus_missions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_missions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Create a new link between a coil and a mission
  /modbus/missions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Delete the specified ID on the the modbus mission table
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_mission'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the mission linked with the coil
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutModbus_mission'
        description: The new values of the modbus_mission
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbus_mission'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the modbus mission with the specified ID
  /modbus/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModbu'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the modbus registers linked to an action
  /path_guides:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPath_guides'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of path guides
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides'
        description: The details of the path_guides
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new path guide
  /path_guides/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the path guide with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the path guide with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guide'
        description: The new values of the path_guide
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the path guide with the specified GUID
  /path_guides/{path_guide_guid}/options:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The path_guide_guid to search for
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_options'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of allowed start/via/goal options for the selected
        path guide
  /path_guides/{path_guide_guid}/positions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The path_guide_guid to search for
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPath_guide_positions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of positions for the path guide with the specified
        GUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The path_guide_guid to add the new resource to
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guide_positions'
        description: The details of the path_guide_positions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_positions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new position to the path guide with the specified GUID
  /path_guides/{path_guide_guid}/positions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The path_guide_guid to delete
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the position with the specified GUID from the path guide with
        the specified path guide GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The path_guide_guid to search for
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_position'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the position with the specified GUID from the path guide with
        the specified path guide GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The path_guide_guid to modify
          in: path
          name: path_guide_guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guide_position'
        description: The new values of the path_guide_position
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guide_position'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the position with the specified GUID from the
        path guide with the specified path guide GUID
  /path_guides_positions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPath_guides_positions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of positions used for path guides
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides_positions'
        description: The details of the path_guides_positions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_positions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new position in a path guide
  /path_guides_positions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the path guide position with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_position'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the position for path guides with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath_guides_position'
        description: The new values of the path_guides_position
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_position'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the position for path guides with the specified
        GUID
  /path_guides_precalc:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_precalc'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status of path guides precalculation
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPath_guides_precalc'
        description: The details of the path_guides_precalc
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath_guides_precalc'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Start/stop precalculation of the specified path guide
  /paths:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPaths'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of paths
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaths'
        description: The details of the paths
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaths'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new path
  /paths/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the path with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the path with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPath'
        description: The new values of the path
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPath'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the path with the specified GUID
  /permissions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the permission with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermission'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the permission with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermission'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the permission with the specified GUID
  /position_transition_lists:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_lists'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of position transition lists
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPosition_transition_lists'
        description: The details of the position_transition_lists
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_lists'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new position transition list
  /position_transition_lists/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the position transition list with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the position transition list with the specified
        GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPosition_transition_list'
        description: The new values of the position_transition_list
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the position transition list with the specified
        GUID
  /position_types:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPosition_types'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve a list of possible position types
  /position_types/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_type'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the position type with the specified ID
  /positions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPositions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of positions
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPositions'
        description: The details of the positions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new position
  /positions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the position with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the position with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPosition'
        description: The new values of the position
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the position with the specified GUID
  /positions/{parent_guid}/helper_positions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The parent_guid to search for
          in: path
          name: parent_guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetHelper_positions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of helper positions for the position with the specified
        parent GUID. Only Charging Stations, V markers, VL markers, Shelf and Trolley
        positions have helper positions
  /positions/{pos_id}/docking_offsets:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The pos_id to search for
          in: path
          name: pos_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPos_docking_offsets'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the docking offset of the position with the
        specified position ID
  /registers:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetRegisters'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of PLC registers from the robot. Registers 1 to 100
        are integers and registers 101-200 are float
  /registers/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the value of the PLC register with the specified ID. Registers
        1 to 100 are integers and registers 101-200 are float
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to add the new resource to
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegister'
        description: The details of the register
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Modify the value of the PLC register with the specified ID. Registers
        1 to 100 are integers and registers 101-200 are float. Even though this is
        not a standard use of the POST call it has been included for compatibility
        purposes
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to modify
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRegister'
        description: The new values of the register
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegister'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the value of the PLC register with the specified ID
  /remote_support:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status of the remote support connection
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRemote_support'
        description: The new values of the remote_support
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the remote support connection timeout
  /remote_support/log:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemote_support_log'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list with the actions performed by the remote support
        controller
  /robots:
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRobots'
        description: The details of the robots
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRobots'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add information about other robots in the world. This is used by the
        Fleet manager to avoid robot collisions
  /service_book:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_books'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve service book entries accessible by user
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostService_books'
        description: The details of the service_books
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_books'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a service book note
  /service_book/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the note with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetService_book'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve note with the GUID
  /sessions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSessions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of sessions
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSessions'
        description: The details of the sessions
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessions'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new session
  /sessions/import:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Cancel currently running import
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_import'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Get progress of the running import
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSession_import'
        description: The details of the session_import
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_import'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Import the session contained in the file
  /sessions/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the session with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the session with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSession'
        description: The new values of the session
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the session with the specified GUID
  /sessions/{guid}/export:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSession_export'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Download a file containing the session with the specified GUID
  /sessions/{session_id}/maps:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The session_id to search for
          in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSession_maps'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of maps that belong to the session with the specified
        session ID
  /sessions/{session_id}/missions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The session_id to search for
          in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSession_missions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of missions that belong to the session with the specified
        session ID
  /sessions/{session_id}/position_transition_lists:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The session_id to search for
          in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPosition_transition_list_from_session'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of position transition lists that belong to the session
        with the specified session ID
  /setting_groups:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSetting_groups'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve a list with the settings groups
  /setting_groups/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_group'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the settings group with the specified ID
  /setting_groups/{settings_group_id}/settings:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The settings_group_id to search for
          in: path
          name: settings_group_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSetting_group_settings'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of settings from the settings group with the specified
        settings group ID
  /setting_groups/{settings_group_id}/settings/advanced:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The settings_group_id to search for
          in: path
          name: settings_group_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSetting_group_advanced_settings'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of advanced settings from the settings group with
        the specified settings group ID
  /settings:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSettings'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve a list with the settings
  /settings/advanced:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSettings_advanced'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list with the advanced settings
  /settings/advanced/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_advanced'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the advanced setting with the specified ID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to modify
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetting_advanced'
        description: The new values of the setting_advanced
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting_advanced'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the advanced setting with the specified ID
  /settings/{id}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to search for
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the setting with the specified ID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The id to modify
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSetting'
        description: The new values of the setting
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetting'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the setting with the specified ID
  /shelf_types:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetShelf_types'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of shelf types
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostShelf_types'
        description: The details of the shelf_types
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShelf_types'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new shelf type
  /shelf_types/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the shelf type with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShelf_type'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the shelf type with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutShelf_type'
        description: The new values of the shelf_type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShelf_type'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the shelf type with the specified GUID
  /software/backups:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSoftware_backups'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list with all the software backups
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backups'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Create a new software backup
  /software/backups/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the software backup with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backup'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the software backup with the specified GUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to add the new resource to
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_backup'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: If it exists a software backup with the specified GUID it will restore
        that backup. Otherwise, it will create a software backup with the specified
        GUID
  /software/lock:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSoftware_lock_self'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status of the software lock
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSoftware_lock_self'
        description: The new values of the software_lock_self
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_lock_self'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the software lock
  /software/logs:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSoftware_logs'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of software upgrade logs
  /software/logs/{guid}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_log'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the software upgrade log with the specified
        GUID
  /software/upgrades:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSoftware_upgrades'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve a list of the software upgrade performed
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrades'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Upgrade with the provided upgrade file
  /software/upgrades/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the upgrade file with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrade'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details of the software upgrade with the specified GUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to add the new resource to
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSoftware_upgrade'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Upgrade to the version of the upgrade file with the specified GUID
  /sounds:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSounds'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of sounds
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSounds'
        description: The details of the sounds
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSounds'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new sound
  /sounds/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the sound with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSound'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the sound with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSound'
        description: The new values of the sound
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSound'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the sound with the specified GUID
  /sounds/{guid}/stream:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetSound_stream'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Download the sound file of the sound with the specified GUID
  /statistics/distance:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDistance_statistics'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list with the distance driven by the robot at different
        dates and times
  /status:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatus'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the status
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStatus'
        description: The new values of the status
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatus'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the status
  /system/info:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystem_info'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: "Retrieve the information about the system. It contains different information\
        \ like serial numbers of hardware components, MAC addresses of network cards,\
        \ etc\u2026"
  /user_groups:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetUser_groups'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of user groups
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser_groups'
        description: The details of the user_groups
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_groups'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new user group
  /user_groups/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the user group with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the user group with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUser_group'
        description: The new values of the user_group
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the user group with the specified GUID
  /user_groups/{user_group_guid}/permissions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The user_group_guid to search for
          in: path
          name: user_group_guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetUser_group_permission'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of permissions of the user group with the specified
        group GUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The user_group_guid to add the new resource to
          in: path
          name: user_group_guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser_group_permission'
        description: The details of the user_group_permission
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_group_permission'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new permission to the group with the specified group GUID
  /users:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetUsers'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of users
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsers'
        description: The details of the users
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsers'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new user
  /users/auth:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Logout user
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsers_auth'
        description: The details of the users_auth
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsers_auth'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Login with user credentials
  /users/me:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetMe'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the user currently authorized in the API
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMe'
        description: The new values of the me
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMe'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the user currently authorized in the API
  /users/me/permissions:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetUser_me_permissions'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the permission of the user currently authorized in the API
  /users/{guid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to delete
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the user with the specified GUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the user with the specified GUID
    put:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to modify
          in: path
          name: guid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUser'
        description: The new values of the user
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
          description: The element has been modified successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Modify the values of the user with the specified GUID
  /wifi:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the URLs to the 3 WiFi related endpoints
  /wifi/connections:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetWifi_connections'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of WiFi networks already configured
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWifi_connections'
        description: The details of the wifi_connections
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connections'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Add a new WiFi network configuration
  /wifi/connections/{uuid}:
    delete:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The uuid to delete
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The element has been deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filters or Invalid JSON or Argument error or Missing
            content type application/json on the header or Bad request or No fields
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Erase the WiFi network configuration with the specified UUID
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The uuid to search for
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connection'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the WiFi network configuration with the
        specified UUID
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The uuid to add the new resource to
          in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWifi_connection'
        description: The details of the wifi_connection
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_connection'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Connect to the network with the specified UUID
  /wifi/networks:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetWifi_networks'
                type: array
          description: Successfully retrieved the list of elements
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the list of WiFi networks available for the robot to connect
  /wifi/networks/{guid}:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
        - description: The guid to search for
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWifi_network'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the details about the WiFi network with the specified GUID
  /world_model:
    get:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorld_model'
          description: Successfully retrieve the specified element
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ordering or Invalid filters or Wrong output fields
            or Invalid limits
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      summary: Retrieve the information about the needed resources from the robot
    post:
      parameters:
        - description: Language header
          in: header
          name: Accept-Language
          schema:
            default: en-US
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorld_model'
        description: The details of the world_model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorld_model'
          description: The element has been created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Argument error or Missing content type application/json on
            the header or Bad request or Invalid JSON
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Duplicate entry
      summary: Upload the world model with the existing robots, resources and positions
        and their respective locks
security:
  - mir: []
